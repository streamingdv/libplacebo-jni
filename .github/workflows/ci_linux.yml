name: CI Linux
on:
  workflow_dispatch:

jobs:
  build-binaries-unix:
    name: Build unix lib
    runs-on: ubuntu-latest

    container:
      image: ubuntu:latest

    steps:
      - name: Install Git
        run: |
          apt-get update
          apt-get install -y git

      - name: Checkout libplacebo-jni repository
        uses: actions/checkout@v2
        with:
          submodules: 'recursive'

      - name: Install dependencies
        run: |
          apt-get update
          apt-get install -y libavcodec-dev libavformat-dev libegl1-mesa-dev libsdl2-dev libxxhash-dev glslang-dev libvulkan-dev liblcms2-dev

      - name: Install Meson and Ninja
        run: |
          apt-get update
          apt-get install -y python3-pip
          pip3 install --upgrade meson==1.3.0
          pip3 install --upgrade ninja==1.11.1

      - name: Build libplacebo
        working-directory: ./libplacebo-jni-native/3rdparty/libplacebo
        run: |
          meson setup build --buildtype release --default-library=static -Ddemos=false -Dprefix=$PWD/install
          meson compile -vC build
          meson install -C build
        shell: msys2 {0}

      - name: Build libplacebo-jni-java compile java
        run: |
          ./gradlew clean
          ./gradlew libplacebo-jni-java:compileJava
        shell: msys2 {0}

      - name: Configure and Build libplacebo-jni with CMake
        run: |
          NATIVE_BINARIES_DIR_UNIX=$(cygpath "${{github.workspace}}/build/nativeBinaries")
          GENERATED_HEADERS_DIR_UNIX=$(cygpath "${{github.workspace}}/build/generatedHeaders")
          cmake -G "Ninja" -B build -S ./libplacebo-jni-native \
            -DCMAKE_BUILD_TYPE=Release \
            -DCMAKE_RUNTIME_OUTPUT_DIRECTORY=${NATIVE_BINARIES_DIR_UNIX} \
            -DCMAKE_LIBRARY_OUTPUT_DIRECTORY=${NATIVE_BINARIES_DIR_UNIX} \
            -DCMAKE_ARCHIVE_OUTPUT_DIRECTORY=${NATIVE_BINARIES_DIR_UNIX} \
            -DGENERATED_JNI_HEADERS_DIR=${GENERATED_HEADERS_DIR_UNIX}
          cmake --build build
        shell: msys2 {0}

      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: linux-libjerasure-jni-artifacts-${{ matrix.arch }}
          path: ${{github.workspace}}/build/nativeBinaries