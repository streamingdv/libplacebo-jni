name: CI macOS

on:
  workflow_dispatch:
    inputs:
      build_libplacebo:
        description: 'Build libplacebo (true/false)'
        required: true
        default: 'false'
      build_shaderc:
        description: 'Build shaderc (true/false)'
        required: true
        default: 'true'
      build_vulkan-loader:
        description: 'Build vulkan-loader (true/false)'
        required: true
        default: 'false'
      build_lcms2:
        description: 'Build lcms2 (true/false)'
        required: true
        default: 'true'

jobs:
  build-binaries-macos:
    name: Build macOS lib for x86_64 and arm64
    strategy:
      matrix:
        arch: [ x86_64, arm64 ]
    runs-on: ${{ matrix.arch == 'x86_64' && 'macos-14-large' || 'macos-14' }}

    steps:
      - name: Checkout libplacebo-jni repository
        uses: actions/checkout@v2
        with:
          submodules: 'recursive'

      - name: Checkout Nuklear library
        uses: actions/checkout@v2
        with:
          repository: 'Immediate-Mode-UI/Nuklear'
          path: 'Nuklear'
          ref: '4.12.0'

      - name: Checkout shaderc repository
        if: ${{ github.event.inputs.build_shaderc == 'true' }}
        uses: actions/checkout@v2
        with:
          repository: 'google/shaderc'
          path: 'shaderc'
          ref: 'v2024.0'

      - name: Checkout vulkan-loader repository
        if: ${{ github.event.inputs.build_vulkan_loader == 'true' }}
        uses: actions/checkout@v2
        with:
          repository: 'KhronosGroup/Vulkan-Loader'
          path: 'vulkan-loader'

      - name: Checkout Little-CMS repository
        if: ${{ github.event.inputs.build_lcms2 == 'true' }}
        uses: actions/checkout@v2
        with:
          repository: 'mm2/Little-CMS'
          path: 'Little-CMS'

      - name: Set up Homebrew and install dependencies
        run: |
          brew update
          brew install pkg-config cmake ninja jq lcms2 sdl2 vulkan-headers meson

      - name: Build Little-CMS
        if: ${{ github.event.inputs.build_lcms2 == 'true' }}
        working-directory: ./Little-CMS
        run: |
          meson setup build --buildtype release --default-library=static --cross-file=${{ matrix.arch }}
          meson compile -C build
          meson install -C build

      - name: Upload Little-CMS
        if: ${{ github.event.inputs.build_lcms2 == 'true' }}
        uses: actions/upload-artifact@v4
        with:
          name: lcms2-macos-${{ matrix.arch }}
          path: ${{github.workspace}}/Little-CMS

      - name: Build shaderc
        if: ${{ github.event.inputs.build_shaderc == 'true' }}
        working-directory: ./shaderc
        run: |
          ./utils/git-sync-deps
          mkdir -p build
          cd build
          cmake -DSHADERC_SKIP_TESTS=ON -DSHADERC_SKIP_EXAMPLES=ON -DCMAKE_BUILD_TYPE=Release -DCMAKE_OSX_ARCHITECTURES=${{ matrix.arch }} ..
          cmake --build . --config Release

      - name: Upload shaderc artefacts
        if: ${{ github.event.inputs.build_shaderc == 'true' }}
        uses: actions/upload-artifact@v4
        with:
          name: shaderc-artefacts-macos-${{ matrix.arch }}
          path: ${{github.workspace}}/shaderc

      - name: Build vulkan-loader
        if: ${{ github.event.inputs.build_vulkan_loader == 'true' }}
        working-directory: ./vulkan-loader
        run: |
          cmake -S . -B build -DCMAKE_BUILD_TYPE=Release -DCMAKE_OSX_ARCHITECTURES=${{ matrix.arch }}
          cmake --build build --config Release

      - name: Upload vulkan-loader artefacts
        if: ${{ github.event.inputs.build_vulkan_loader == 'true' }}
        uses: actions/upload-artifact@v4
        with:
          name: vulkan-loader-artefacts-macos-${{ matrix.arch }}
          path: ${{github.workspace}}/vulkan-loader

      - name: Build libplacebo
        if: ${{ github.event.inputs.build_libplacebo == 'true' }}
        working-directory: ./libplacebo-jni-native/3rdparty/libplacebo
        run: |
          meson setup build --buildtype release --default-library=static --cross-file=${{ matrix.arch }} -Ddemos=false -Dprefix=$PWD/install
          meson compile -vC build
          meson install -C build

      - name: Upload libplacebo artefacts
        if: ${{ github.event.inputs.build_libplacebo == 'true' }}
        uses: actions/upload-artifact@v4
        with:
          name: libplacebo-artefacts-macos-${{ matrix.arch }}
          path: ${{github.workspace}}/libplacebo-jni-native/3rdparty/libplacebo/install

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Build libplacebo-jni-java
        run: |
          ./gradlew clean
          ./gradlew libplacebo-jni-java:compileJava

      - name: Configure and Build libplacebo-jni with CMake
        run: |
          LIBPLACEBO_LIB_PATH=${{github.workspace}}/libplacebo-jni-native/3rdparty/libplacebo/install/lib/libplacebo.a
          LIBPLACEBO_HEADERS_DIR=${{github.workspace}}/libplacebo-jni-native/3rdparty/libplacebo/install/include

          cmake -G "Ninja" -B build -S ./libplacebo-jni-native \
            -DCMAKE_BUILD_TYPE=Release \
            -DCMAKE_OSX_ARCHITECTURES=${{ matrix.arch }} \
            -DVULKAN_LIB_DIR=${{github.workspace}}/libs/vulkan-loader/macos/${{ matrix.arch }} \
            -DLIBPLACEBO_LIB_PATH=${LIBPLACEBO_LIB_PATH} \
            -DLIBPLACEBO_HEADERS_DIR=${LIBPLACEBO_HEADERS_DIR} \
            -DCMAKE_RUNTIME_OUTPUT_DIRECTORY=${{ github.workspace }}/build/nativeBinaries \
            -DCMAKE_LIBRARY_OUTPUT_DIRECTORY=${{ github.workspace }}/build/nativeBinaries \
            -DCMAKE_ARCHIVE_OUTPUT_DIRECTORY=${{ github.workspace }}/build/nativeBinaries \
            -DGENERATED_JNI_HEADERS_DIR=${{ github.workspace }}/build/generatedHeaders \
            -DSHADERC_LIB_DIR=${{github.workspace}}/libs/shaderc/macos/${{ matrix.arch }}/lib \
            -DSHADERC_HEADERS_DIR=${{github.workspace}}/libs/shaderc/macos/${{ matrix.arch }}/include \
            -DFFMPEG_DIR=${{github.workspace}}/libs/ffmpeg/macos/${{ matrix.arch }} \
            -DLCMS2_DIR=${{github.workspace}}/libs/lcms2/macos/${{ matrix.arch }} \
            -DNUKLEAR_DIR=${{github.workspace}}/Nuklear \
            -DVKMEMALLOC_HEADERS=${{github.workspace}}/libs/vulkan-memory-allocator/include \
            -DIS_RUNNING_ON_WINDOWS=OFF
          cmake --build build

      - name: Rename dylib file
        run: mv ${{github.workspace}}/build/nativeBinaries/libplacebo-jni-native.dylib ${{github.workspace}}/build/nativeBinaries/libplacebo-jni-native-${{ matrix.arch }}.dylib

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: macos-libplacebo-jni-artifact-${{ matrix.arch }}
          path: ${{github.workspace}}/build/nativeBinaries/libplacebo-jni-native-${{ matrix.arch }}.dylib
